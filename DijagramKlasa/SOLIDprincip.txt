1. Single Responsibility Principle: zahtijeva da svaka klasa ima samo jednu odgovornost, odnosno da klasa
vrši samo jedan tip akcija kako ne bi ovisila o prevelikom broju konkretnih
implementacija.
-Princip ispunjen.Sve klase imaju samo jedan tip akcije.
2. Open/Closed Principle: zahtijeva da klasa koja koristi neku drugu klasu ne treba biti modificirana
pri uvodenju novih funkcionalnosti, ili pri potrebi za mijenjanjem druge klase.
-Ni jedna klasa ne krši ovaj princip tako da je i on ispunjen.
3. Liskov Substitution Principle: zahtijeva da nasljedivanje bude ispravno implementirano, odnosno da je na
svim mjestima na kojima se koristi osnovni objekat moguce iskoristiti i izvedeni
objekat bez ikakvih problema.
-Princip ispunjen(nema nasljeđivanja).
4. Interface Segregation Principle: Bzahtijeva da i svi interface objekti zadovoljavaju princip S, odnosno da
svaki interface obavlja samo jednu vrstu akcija. 
-Za interface IPretraga je ispunjen ovaj princip jer radi istu akciju i za gosta i kupca te zbog toga 
ne treba praviti dva posebna interface-a. Za interface IBaza je isto ispunjen ovaj princip.
5. Dependency Inversion Principle: zahtijeva da pri nasljedivanju od strane više klasa bazna klasa uvijek bude
apstraktna (ovo je posebno važno pri nasljedivanju kada su u pitanju interface-i).
-Princip ispunjen(nema nasljeđivanja).
